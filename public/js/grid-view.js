// Generated by CoffeeScript 1.3.3

(function() {
  var UpdateTableHeaders, copyHeaderSize, domLoaded, domainTitleMouseEnter, domainTitleMouseLeave, getInnerOuterOffset, getTableHeaderOffset, horizontalScroll, innerOuterOffset, isTableOnScreen, loadDataIntoTable, onDomLoad, onDomUnload, positionHorizScroll, preventEvent, stickyHeaderEnabled, tableHead, tableHeaderOffset, toggleFavourite, toggleSelect, toggleSticky, windowResize, windowScroll;
  onDomLoad = function() {
    var innerOuterOffset, tableHeaderOffset;
    ++domLoaded;
    if (domLoaded > 1) {
      return;
    }
    loadDataIntoTable();
    $(document.body).not(".mobile").find(".domain-title").on({
      mouseenter: domainTitleMouseEnter,
      mouseleave: domainTitleMouseLeave
    });
    $("#main-container").on("click", ".grid-table .sticky", toggleSticky);
    $(".grid-table").children("tbody").on("click", ".domain-title-cntnr .copy-to-clipboard", preventEvent).on("click", "td button.favourite", toggleFavourite).on("click", "td button.select", toggleSelect).on("click", "td:not(#zero-alert)", function() {
      var $parent, $row, $this, parent, rowIsSelected;
      $this = $(this);
      $row = $this.closest("tr");
      parent = void 0;
      rowIsSelected = void 0;
      if ($row.hasClass("child")) {
        return $row.fadeOut(function() {
          return $this.prev().removeClass("row-sel parent-open").remove();
        });
      } else {
        $parent = $row.parent();
        rowIsSelected = $row.hasClass("parent-open");
        $parent.children("tr.row-sel.child").fadeOut(function() {
          return $this.prev().removeClass("row-sel parent-open").remove();
        });
        if (!rowIsSelected) {
          $row.addClass("row-sel parent-open");
          $row.after("<tr class=\"row-sel child\" style=\"display:none;\"><td colspan=\"" + row.find("td").length + "\"><div class=\"child-inner\"> <a class=\"x-row-sel\" href=\"javascript:void(0);\">x</a><p><strong>selected domain content</strong> <br>to be placed in here â€¦</p></div></td></tr>");
          return $row.next().fadeIn();
        }
      }
    });
    $(window).on("resize", windowResize).on("scroll", windowScroll);
    $(verticalScroll + ", " + horizontalScroll).on("resize", copyHeaderSize);
    $(horizontalScroll).on("tsb_scroll", horizontalScroll + " > .scrollbar", UpdateTableHeaders);
    $(tableHead).each(function() {
      var $parent, $this, cloneTable, clonedHeaderRow, originalHeaderRow;
      $this = $(this);
      $parent = $this.parent();
      originalHeaderRow = void 0;
      cloneTable = void 0;
      clonedHeaderRow = void 0;
      if ($parent.css("position") === "relative") {
        $parent.addClass("divTableWithFloatingHeader");
      } else {
        $this.wrap("<div class=\"divTableWithFloatingHeader\" style=\"position: relative;\" />");
      }
      originalHeaderRow = $("thead:first", this);
      cloneTable = $("#thetableclone").children("table");
      clonedHeaderRow = cloneTable.append(originalHeaderRow.clone());
      clonedHeaderRow.closest("#thetableclone").css({
        top: $("header#main").height(),
        left: $this.css("margin-left") + $this.offset().left
      });
      clonedHeaderRow.addClass("tableFloatingHeader");
      originalHeaderRow.addClass("tableFloatingHeaderOriginal");
      return copyHeaderSize();
    });
    $(horizontalScroll).tinyscrollbar({
      axis: "x",
      scroll: false
    });
    innerOuterOffset = getInnerOuterOffset();
    tableHeaderOffset = getTableHeaderOffset();
    positionHorizScroll();
    return UpdateTableHeaders();
  };
  onDomUnload = function() {
    var exchangeDomainResults;
    $("div.divTableWithFloatingHeader").remove();
    $(document.body).not(".mobile").find("td.domain-title").off({
      mouseenter: domainTitleMouseEnter,
      mouseleave: domainTitleMouseLeave
    });
    $("#main-container").off("click", ".grid-table th.sticky", toggleSticky);
    $(".grid-table").children("tbody").off("click", ".domain-title-cntnr .copy-to-clipboard", preventEvent).off("click", "td button.favourite", toggleFavourite).off("click", "td button.select", toggleSelect);
    $(window).off("resize", windowResize).off("scroll", windowScroll);
    $(verticalScroll + ", " + horizontalScroll).off("resize", copyHeaderSize);
    $(horizontalScroll).off("tsb_scroll", horizontalScroll + " > .scrollbar", UpdateTableHeaders);
    if (typeof exchangeDomainResults !== "undefined") {
      return exchangeDomainResults = null;
    }
  };
  preventEvent = function(e) {
    e.preventDefault();
    return false;
  };
  toggleSticky = function(e) {
    var spans, stickyHeaderEnabled;
    spans = $(".grid-table th.sticky").children("span");
    if (stickyHeaderEnabled) {
      stickyHeaderEnabled = false;
      spans.removeClass("on").addClass("off");
      $(document.body).removeClass("sticky-thead");
    } else {
      stickyHeaderEnabled = true;
      spans.addClass("on").removeClass("off");
    }
    UpdateTableHeaders();
    return preventEvent(e);
  };
  toggleFavourite = function(e) {
    $(this).button("toggle");
    return preventEvent(e);
  };
  toggleSelect = function(e) {
    $(this).button("toggle");
    return preventEvent(e);
  };
  domainTitleMouseEnter = function() {
    return $(this).find(".domain-title-cntnr .copy-to-clipboard").css("opacity", 1);
  };
  domainTitleMouseLeave = function() {
    return $(this).find(".domain-title-cntnr .copy-to-clipboard").css("opacity", 0);
  };
  windowResize = function() {
    var innerOuterOffset, tableHeaderOffset;
    $(horizontalScroll).tinyscrollbar_update("relative");
    innerOuterOffset = getInnerOuterOffset();
    tableHeaderOffset = getTableHeaderOffset();
    positionHorizScroll();
    return UpdateTableHeaders();
  };
  windowScroll = function() {
    var innerOuterOffset, tableHeaderOffset;
    $(".btn-group.open").removeClass("open");
    innerOuterOffset = getInnerOuterOffset();
    tableHeaderOffset = getTableHeaderOffset();
    positionHorizScroll();
    return UpdateTableHeaders();
  };
  getInnerOuterOffset = function() {
    var innerOffset, scrollOffset, vertOffset;
    scrollOffset = $(verticalScroll).scrollTop();
    vertOffset = $(verticalScroll).offset().top;
    innerOffset = $(horizontalScroll).offset().top;
    return (innerOffset - scrollOffset) - vertOffset;
  };
  getTableHeaderOffset = function() {
    var scrollOffset, tableOffset, vertOffset;
    scrollOffset = $(verticalScroll).scrollTop();
    vertOffset = $(verticalScroll).offset().top;
    tableOffset = $(horizontalScroll + " table").offset().top;
    return $("#grid-view .grid-table").offset().top;
  };
  isTableOnScreen = function(offset) {
    var bottomOfScreen, tableOffset;
    bottomOfScreen = $(window).scrollTop() + $(window).height();
    tableOffset = $(horizontalScroll + " table").offset().top;
    offset = offset || 0;
    return bottomOfScreen - (tableOffset + offset) >= 0;
  };
  positionHorizScroll = function() {
    var scroll, scrollOffset, viewHeight;
    viewHeight = $(verticalScroll).height();
    scrollOffset = $(verticalScroll).scrollTop();
    scroll = $(horizontalScroll + " > .scrollbar");
    return scroll.css("display", (isTableOnScreen() ? "block" : "none"));
  };
  UpdateTableHeaders = function() {
    return $("div.divTableWithFloatingHeader").each(function() {
      var body, offset, scrollTop, theClone, theCloneContainer, theCloneTable, viewport;
      theClone = $(".tableFloatingHeader");
      theCloneTable = theClone.closest("table");
      theCloneContainer = theClone.closest("#thetableclone");
      body = $(document.body);
      if (!stickyHeaderEnabled) {
        theCloneContainer.css("display", "none");
        if (body.hasClass("sticky-thead")) {
          body.removeClass("sticky-thead");
        }
        return;
      }
      offset = tableHeaderOffset;
      scrollTop = $(window).scrollTop();
      viewport = $(this).closest(".viewport");
      if ((scrollTop + $("header#main").height()) - offset > 0) {
        theCloneContainer.css("display", "block");
        if (!body.hasClass("sticky-thead")) {
          body.addClass("sticky-thead");
        }
      } else {
        theCloneContainer.css("display", "none");
        if (body.hasClass("sticky-thead")) {
          body.removeClass("sticky-thead");
        }
      }
      theCloneTable.css({
        left: -$(horizontalScroll).tinyscrollbar_offset() + "px"
      });
      return theCloneContainer.width(viewport.width());
    });
  };
  copyHeaderSize = function() {
    return $("div.divTableWithFloatingHeader").each(function() {
      var clonedHeaderRow, originalHeaderRow;
      originalHeaderRow = $(".tableFloatingHeaderOriginal", this);
      clonedHeaderRow = $(".tableFloatingHeader", this);
      return $("th", clonedHeaderRow).each(function(i) {
        return $(this).css("width", $("th", originalHeaderRow).eq(i).css("width"));
      });
    });
  };
  loadDataIntoTable = function() {
    var domain, i, table, tableData, _results;
    tableData = void 0;
    table = void 0;
    if (typeof exchangeDomainResults === "undefined" || exchangeDomainResults === null) {
      return;
    }
    tableData = $.parseJSON(exchangeDomainResults);
    table = $(".grid-table tbody");
    table.find("tr").remove();
    if (!tableData || tableData.error) {
      if (tableData) {
        console.log("Error retreiving domain data: " + tableData.error);
      }
      table.append("<tr><td id=\"zero-alert\" colspan=\"17\"><span class=\"ff-icon-before\"><a class=\"ff-icon x-zero-alert\" href=\"javascript:void(0);\"></a><strong>Sorry</strong>, there was an error retreiving domain listings. Please try again.</td></tr>");
      return;
    }
    if (tableData.length === 0) {
      return table.append("<tr><td id=\"zero-alert\" colspan=\"17\"><span class=\"ff-icon-before\"><a class=\"ff-icon x-zero-alert\" href=\"javascript:void(0);\"></a><strong>Sorry</strong>, we couldn't find any exact matches for this keyword.</td></tr>");
    } else {
      i = 0;
      _results = [];
      while (i < tableData.length) {
        domain = tableData[i];
        table.append("<tr> \t\t\t\t\t<td><button class=\"btn select\" data-toggle=\"button\"></button></td> \t\t\t\t\t<td><button class=\"btn favourite\" data-toggle=\"button\"></button></td> \t\t\t\t\t<td class=\"actions\"><span class=\"action-buttons\"><a href=\"#\" title=\"Build website\"></a><a href=\"#\" title=\"List for sale\"></a></span></td> \t\t\t\t\t<td class=\"domain-title\"><span class=\"domain-title-cntnr\">" + domain.domain.nameonly + " <span class=\"tld\">" + domain.domain.tld + "</span></span></td> \t\t\t\t\t<td class=\"date\">" + domain.auction_details[0].auction_end_date + "</td> \t\t\t\t\t<td class=\"currency\">" + domain.auction_details[0].auction_price + "</td> \t\t\t\t\t<td>" + domain.auction_details[0].auction_bidders + "</td> \t\t\t\t\t<td>" + domain.domain.chars + "</td> \t\t\t\t\t<td>" + (domain.domain.dash ? "?" : "-") + "</td> \t\t\t\t\t<td>" + domain.domain.tld + "</td> \t\t\t\t\t<td>" + (domain.tld_available.com !== "0" ? "?" : "?") + "</td> \t\t\t\t\t<td>" + (domain.tld_available.net !== "0" ? "?" : "?") + "</td> \t\t\t\t\t<td>" + (domain.tld_available.org !== "0" ? "?" : "?") + "</td> \t\t\t\t\t<td>" + domain.pagerank.pagerank + "</td> \t\t\t\t\t<td>" + domain.backlinks.edu + "</td> \t\t\t\t\t<td>" + domain.backlinks.gov + "</td> \t\t\t\t\t<td>" + domain.backlinks.google + "</td> \t\t\t\t</tr>");
        _results.push(++i);
      }
      return _results;
    }
  };
  horizontalScroll = "#grid-view";
  tableHead = "table.floatable";
  innerOuterOffset = void 0;
  tableHeaderOffset = void 0;
  domLoaded = 0;
  stickyHeaderEnabled = true;
  onDomLoad();
  return $(document).on("click", "#toggle-side-bar, #x-side-bar", function(e) {
    windowResize();
    return windowScroll();
  });
})();
