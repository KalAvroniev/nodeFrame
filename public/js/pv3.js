// Generated by CoffeeScript 1.3.3
var NotificationsController, togglePanel, verticalScroll;

togglePanel = function(selectorName, contentCallback) {
  var $panel, $this;
  $this = $(this);
  $panel = $("#section-panel");
  if ($panel.data("tab") === selectorName) {
    $panel.addClass("hidden").removeData("tab");
  } else {
    if ($panel.hasClass("hidden")) {
      $panel.removeClass("hidden");
    } else {
      $this.siblings().removeClass("active");
    }
    $panel.html(contentCallback()).data("tab", selectorName);
  }
  if ($panel.hasClass("hidden")) {
    return $this.removeClass("active");
  } else {
    return $this.addClass("active");
  }
};

NotificationsController = function(notifications) {
  this.notifications = notifications;
};

verticalScroll = "body";

Number.prototype.toMoney = function(decimals, decimal_sep, thousands_sep) {
  var c, d, i, j, n, sign, t;
  n = this;
  c = (isNaN(decimals) ? 2 : Math.abs(decimals));
  d = decimal_sep || ".";
  t = (typeof thousands_sep === "undefined" ? "," : thousands_sep);
  sign = (n < 0 ? "-" : "");
  i = parseInt(n = Math.abs(n).toFixed(c)) + "";
  j = ((j = i.length) > 3 ? j % 3 : 0);
  return sign + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
};

$(document).ready(function() {
  $(".dropdown-toggle").dropdown();
  $(window).resize(function() {
    return Scrollbars.update("notifications");
  });
  $("#system-help, #live-help-status, #live-help-info > a").on("click", function(e) {
    e.preventDefault();
    return TaskStatus.show("error", "The Live Help system is coming soon.");
  });
  document.socketio = io.connect("http://" + location.host);
  document.socketio.on("logout", function() {
    return document.location = "/login";
  });
  return $.jsonrpc("notifications/fetch", {}, function(data) {
    var notif;
    notif = new NotificationsController(data.notifications);
    notif.render();
    return document.socketio.on("notification", function(msg) {
      notif.notifications.unshift(msg.data);
      return notif.render();
    });
  });
});

NotificationsController.prototype.render = function() {
  var ns;
  ns = this.notifications;
  $.jade.getTemplate("notifications/generic", (function(fn) {
    var i, notif;
    $("#protrada-msgs.no-alerts").removeClass("no-alerts").find(".alerts-listing").html(" ");
    i = 0;
    while (i < ns.length) {
      notif = $.jade.renderSync(fn, ns[i]);
      $("#protrada-msgs").append(notif);
      ++i;
    }
    $("header#main").find(".alerts-summary").find("span[data-title^=\"Protrada\"]").attr("data-alerts", ns.length);
    $(".protrada .alert-count").attr("data-alerts", ns.length);
    return Scrollbars.update("notifications");
  }), function(error) {
    return alert(error);
  });
};
